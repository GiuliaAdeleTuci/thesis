## CON WINDOWS

## code - tentauvo con immagine groenlandia (poi non usata) 
install.packages("remotes")

remotes::install_github("bleutner/RStoolbox")
install.packages("ggplot2")
install.packages("RStoolbox")
install.packages("raster")
install.packages("RGdal")
# libray di tutto

a <- raster("C:/Users/utente/Documents/T22WEU_20210217T151209_B02_10m.jp2")
b <- raster("C:/Users/utente/Documents/T22WEU_20210217T151209_B03_10m.jp2")
c <- raster("C:/Users/utente/Documents/T22WEU_20210217T151209_B04_10m.jp2")
d <- raster("C:/Users/utente/Documents/T22WEU_20210217T151209_B05_20m.jp2")
resample(d,c) 
e <- raster("C:/Users/utente/Documents/T22WEU_20210217T151209_B06_20m.jp2")
resample(e,a)
f <-  <- raster("C:/Users/utente/Documents/T22WEU_20210217T151209_B07_20m.jp2")
resample(f,a)
g  <- raster("C:/Users/utente/Documents/T22WEU_20210217T151209_B08_10m.jp2")

## il resample ci mette ore, trovare metodo diverso?? per ora non metto quelle da 20m 
try <- stack(a,b,c,g)
try

## uso tutte 20m (import con raster e poi stack)

MapTheme <- list(theme(
  axis.text = element_text(size = 6),  
  axis.text.y = element_text(angle = 90, hjust = 0.5),
  axis.title = element_blank()
))  
ggRGB(try, stretch = "lin")
set.seed(42)

## default behavior
lsat_uc <- unsuperClass(try, nClasses = 4, output = "classes")
lsat_uc
ggR(lsat_uc$map, forceCat = TRUE, geom_raster = TRUE) +
  scale_fill_viridis_d(name = "Cluster", option = "A") + MapTheme

## Distances
set.seed(42)
lsat_ucd <- unsuperClass(try, nClasses = 4, output = "distances")

lsat_ucd
ggR(lsat_ucd$map, layer = 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Distance", direction = -1) + MapTheme

## Spectral angle mapper
classCentroids <- lsat_ucd$model$centers

lsat_sa <- sam(try, em = classCentroids, angles = TRUE)
lsat_sa
ggR(lsat_sa, 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Spectral angle", direction = -1) + MapTheme

## Spectral unmixing
lsat_umx <- mesma(try, em = classCentroids)
lsat_umx
ggR(lsat_umx, 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Probability") + MapTheme
## molto lento ma alla fine ha funzionato

## per crop (etna)
ext2 <- c(470000,510000,4140000,4200000) #giusto
zoom(etn,ext=ext2)
etn1 <- crop(etn,ext2)
writeRaster(etn2,"etn2.tif")

## plotRGB, 3,2,1 10m
require(raster)
require(RStoolbox)
etna20v <- raster("C:/Users/utente/Documents/T33SVB_20200222T095021_B03_10m.jp2")
etna20r <- raster("C:/Users/utente/Documents/T33SVB_20200222T095021_B04_10m.jp2")
etna20ir <- raster("C:/Users/utente/Documents/T33SVB_20200222T095021_B08_10m.jp2")
etnaRGB20 <- stack(etna20v,etna20r,etna20ir)
ext2 <- c(470000,510000,4140000,4200000)
zoom(etnaRGB20,ext=ext2)
etnRGB20 <- crop(etnaRGB20,ext2)
writeRaster(etnRGB20,"etnRGB20.tif")
plotRGB(etnRGB20, stretch="Lin")

plotRGB(etnRGB20, 3,2,1, stretch="Lin") #per plot RGB  con montaggio delle bande verde rosso e IR



## california fires
## post incendio: 26/10/2020
k2 <- raster("C:/Users/utente/Documents/T10SFH_20201026T185459_B02_20m.jp2")
k3 <- raster("C:/Users/utente/Documents/T10SFH_20201026T185459_B03_20m.jp2")
k4 <- raster("C:/Users/utente/Documents/T10SFH_20201026T185459_B04_20m.jp2")
k5 <- raster("C:/Users/utente/Documents/T10SFH_20201026T185459_B05_20m.jp2")
k6 <- raster("C:/Users/utente/Documents/T10SFH_20201026T185459_B06_20m.jp2")
k7 <- raster("C:/Users/utente/Documents/T10SFH_20201026T185459_B07_20m.jp2")
k8 <- raster("C:/Users/utente/Documents/T10SFH_20201026T185459_B8A_20m.jp2")
calfire10 <- stack(k2,k3,k4,k5,k6,k7,k8)
calfire10
MapTheme <- list(theme(
  axis.text = element_text(size = 6),  
  axis.text.y = element_text(angle = 90, hjust = 0.5),
  axis.title = element_blank()
))  
ggRGB(calfire10, stretch = "lin")

## serve fare un crop 
ext <- c(640000,690000,4225000,4275000)
zoom(calfire10, ext=ext)
ext2 <- c(655000,675000,4240000,4260000)
zoom(calfire10,ext=ext2)
califire10 <- crop(calfire10,ext2)
ext3 <- c(660000,674000,4247000,4257000)
zoom(califire10,ext=ext3)
califir10 <- crop(califire10, ext3)
writeRaster(califir10,"califir10.tif")

MapTheme <- list(theme(
  axis.text = element_text(size = 6),  
  axis.text.y = element_text(angle = 90, hjust = 0.5),
  axis.title = element_blank()
))  
ggRGB(califir10, stretch = "lin")
set.seed(42)

## default behavior
lsat_uc <- unsuperClass(califir10, nClasses = 4, output = "classes")
lsat_uc
ggR(lsat_uc$map, forceCat = TRUE, geom_raster = TRUE) +
  scale_fill_viridis_d(name = "Cluster", option = "A") + MapTheme

## Distances
set.seed(42)
lsat_ucd <- unsuperClass(califir10, nClasses = 4, output = "distances")

lsat_ucd
ggR(lsat_ucd$map, layer = 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Distance", direction = -1) + MapTheme

## Spectral angle mapper
classCentroids <- lsat_ucd$model$centers

lsat_sa <- sam(califir10, em = classCentroids, angles = TRUE)
lsat_sa
ggR(lsat_sa, 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Spectral angle", direction = -1) + MapTheme

## Spectral unmixing
lsat_umx <- mesma(califir10, em = classCentroids)
lsat_umx
ggR(lsat_umx, 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Probability") + MapTheme

## califire 03/2020
## uguale


## AUSTRALIA
## pre fire: 21/11/19 
a2 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B02_20m.jp2")
a3 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B03_20m.jp2")
a4 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B04_20m.jp2")
a5 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B05_20m.jp2")
a6 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B06_20m.jp2")
a7 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B07_20m.jp2")
a8 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B8A_20m.jp2")
ausfire19 <- stack(a2,a3,a4,a5,a6,a7,a8)
ausfire19
MapTheme <- list(theme(
  axis.text = element_text(size = 6),  
  axis.text.y = element_text(angle = 90, hjust = 0.5),
  axis.title = element_blank()
))  
ggRGB(ausfire19, stretch = "lin")

## serve fare un crop 
ext1 <- c(735000,760000,5845000,5860000)
zoom(ausfire19, ext=ext1)

ausfir19 <- crop(ausfire19, ext1)
writeRaster(ausfir19,"ausfir19.tif")

ext2 <- c(740000,760000,5847000,5860000) ## scelto
zoom(ausfire19, ext=ext2)

austfir19 <- crop(ausfire19, ext2)
writeRaster(austfir19,"austfir19.tif")
ggRGB(ausfir19, stretch = "lin")
set.seed(42)

## default behavior
lsat_uc <- unsuperClass(austfir19, nClasses = 4, output = "classes")
lsat_uc
ggR(lsat_uc$map, forceCat = TRUE, geom_raster = TRUE) +
  scale_fill_viridis_d(name = "Cluster", option = "A") + MapTheme

## Distances
set.seed(42)
lsat_ucd <- unsuperClass(austfir19, nClasses = 4, output = "distances")

lsat_ucd
ggR(lsat_ucd$map, layer = 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Distance", direction = -1) + MapTheme

## Spectral angle mapper
classCentroids <- lsat_ucd$model$centers

lsat_sa <- sam(austfir19, em = classCentroids, angles = TRUE)
lsat_sa
ggR(lsat_sa, 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Spectral angle", direction = -1) + MapTheme

## Spectral unmixing
lsat_umx <- mesma(austfir19, em = classCentroids)
lsat_umx
ggR(lsat_umx, 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Probability") + MapTheme
  
  
  ## plot RGB 3,2,1
  # con 10m 
au3 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B03_10m.jp2")
au4 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B04_10m.jp2")
au8 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B08_10m.jp2")
au19 <- stack(au3,au4,au8)
 zoom(au19, ext=ext2)

auRGB19 <- crop(au19, ext2)
writeRaster(auRGB19,"auRGB19.tif") 
  plotRGB(auRGB19, 3,2,1, stretch="Lin")
  
## 20/03/2020, post
as2 <- raster("C:/Users/utente/Documents/T55HGU_20200320T000241_B02_20m.jp2")
as3 <- raster("C:/Users/utente/Documents/T55HGU_20200320T000241_B03_20m.jp2")
as4 <- raster("C:/Users/utente/Documents/T55HGU_20200320T000241_B04_20m.jp2")
as5 <- raster("C:/Users/utente/Documents/T55HGU_20200320T000241_B05_20m.jp2")
as6 <- raster("C:/Users/utente/Documents/T55HGU_20200320T000241_B06_20m.jp2")
as7 <- raster("C:/Users/utente/Documents/T55HGU_20200320T000241_B07_20m.jp2")
as8 <- raster("C:/Users/utente/Documents/T55HGU_20200320T000241_B8A_20m.jp2")
ausfire20 <- stack(as2,as3,as4,as5,as6,as7,as8)
ausfire20
MapTheme <- list(theme(
  axis.text = element_text(size = 6),  
  axis.text.y = element_text(angle = 90, hjust = 0.5),
  axis.title = element_blank()
))  
ggRGB(ausfire20, stretch = "lin")

## crop 
ext2 <- c(740000,760000,5847000,5860000) ## scelto
zoom(ausfire20, ext=ext2)

austfir20 <- crop(ausfire20, ext2)
writeRaster(austfir20,"austfir20.tif")
ggRGB(austfir20, stretch = "lin")
set.seed(42)

## default behavior
lsat_uc <- unsuperClass(austfir20, nClasses = 4, output = "classes")
lsat_uc
ggR(lsat_uc$map, forceCat = TRUE, geom_raster = TRUE) +
  scale_fill_viridis_d(name = "Cluster", option = "A") + MapTheme

## Distances
set.seed(42)
lsat_ucd <- unsuperClass(austfir20, nClasses = 4, output = "distances")

lsat_ucd
ggR(lsat_ucd$map, layer = 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Distance", direction = -1) + MapTheme

## Spectral angle mapper
classCentroids <- lsat_ucd$model$centers

lsat_sa <- sam(austfir20, em = classCentroids, angles = TRUE)
lsat_sa
ggR(lsat_sa, 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Spectral angle", direction = -1) + MapTheme

## Spectral unmixing
lsat_umx <- mesma(austfir20, em = classCentroids)
lsat_umx
ggR(lsat_umx, 1:4, geom_raster = TRUE) +
  scale_fill_viridis_c(name = "Probability") + MapTheme
  
  
  ## plot RGB 3,2,1
  # con 10m 
aus3 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B03_10m.jp2")
aus4 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B04_10m.jp2")
aus8 <- raster("C:/Users/utente/Documents/T55HGU_20191121T000241_B08_10m.jp2")
au20 <- stack(aus3,aus4,aus8)
 zoom(au20, ext=ext2)

auRGB20 <- crop(au20, ext2)
writeRaster(auRGB20,"auRGB20.tif") 
  plotRGB(auRGB20, 3,2,1, stretch="Lin")
