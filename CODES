## FOREST TYPES
require(raster)
require(RStoolbox)


shp_area_for <-shapefile("C:/Users/utente/Documents/extent_polygon.shp")
l <- crop(raster("C:/Users/utente/Documents/L2A_T32TPS_20171014T102021_B02_20m.jp2"),shp_area_for)
l2 <- crop(raster("C:/Users/utente/Documents/L2A_T32TPS_20171014T102021_B03_20m.jp2"),shp_area_for)
l3 <- crop(raster("C:/Users/utente/Documents/L2A_T32TPS_20171014T102021_B04_20m.jp2"),shp_area_for)
l4 <- crop(raster("C:/Users/utente/Documents/L2A_T32TPS_20171014T102021_B05_20m.jp2"),shp_area_for)
l5 <- crop(raster("C:/Users/utente/Documents/L2A_T32TPS_20171014T102021_B06_20m.jp2"),shp_area_for)
l6 <- crop(raster("C:/Users/utente/Documents/L2A_T32TPS_20171014T102021_B07_20m.jp2"),shp_area_for)
l7 <- crop(raster("C:/Users/utente/Documents/L2A_T32TPS_20171014T102021_B8A_20m.jp2"),shp_area_for)
forest <- stack(l,l2,l3,l4,l5,l6,l7)
forest
writeRaster(forest,"forest_4.tif")
library(RStoolbox)
library(ggplot2)
library(viridis)
MapTheme <- list(theme(
  axis.text = element_text(size = 6),  
  axis.text.y = element_text(angle = 90, hjust = 0.5),
  axis.title = element_blank()
))  

set.seed(42)
lsat_uc <- unsuperClass(forest,nClasses =4,output="classes")
lsat_uc
ggR(lsat_uc$map, forceCat = TRUE, geom_raster = TRUE) +
  scale_fill_viridis_d(name = "Cluster", option = "A") + MapTheme

## distances
set.seed(42)
lsat_ucd <- unsuperClass(forest,nClasses=3 output = "distances")
lsat_ucd
ggR(lsat_ucd$map, layer = 1:3, stretch="lin", geom_raster = TRUE) +
  scale_fill_viridis(option="magma", name = "Distance", direction = -1) + MapTheme

##sam
classCentroids <- lsat_ucd$model$centers

lsat_sa <- sam(forest,em = classCentroids, angles = TRUE)
lsat_sa
ggR(lsat_sa, 1:3, stretch="lin", geom_raster = TRUE) +
  scale_fill_viridis(option="magma",name = "Spectral angle", direction = -1) + MapTheme

##UMX
lsat_umx <- mesma(forest, em = classCentroids)
lsat_umx
ggR(lsat_umx, 1:3, stretch="lin", geom_raster = TRUE) +
  scale_fill_viridis(option="magma",name = "Probability") + MapTheme

## SUPERVISED
## SUPERVISED CLASSIFICATION EXERCISE 
library(raster)

vaia20 <- stack("C:/Users/utente/Documents/vaia20.tif")

vaia20
names(vaia20) <- c('ultra-blue', 'blue', 'green', 'red', 'NIR', 'SWIR1', 'SWIR2')
# The class names and colors for plotting
nlcdclass <- c("Forest", "Grass", "Windthrow")
classdf <- data.frame(classvalue1 = c(1,2,3), classnames1 = nlcdclass)
classdf
# Hex codes of colors
classcolor <- c("#5475A8", "#B50000", "#D2CDC0")#, 

samp <- shapefile("C:/Users/utente/Documents/ter1.shp")
samp

# generate 300 point samples from the polygons
ptsamp <- spsample(samp, 300, type='regular')
ptsamp
# add the land cover class to the points
ptsamp$class <- over(ptsamp, samp)$class
ptsamp$class
# extract values with points
df <- raster::extract(vaia20, ptsamp)
df
head(df)

install.packages("rasterVis")
library(rasterVis)
plt <- levelplot(vaia20, col.regions = classcolor, main = 'Distribution of Training Sites')
plt
print(plt + layer(sp.points(ptsamp, pch = 3, cex = 0.5, col = 1)))

sampvals <- extract(vaia20, ptsamp, df = TRUE)
sampvals <- sampvals[, -1]
# combine the class information with extracted values
sampdata <- data.frame(classvalue = ptsamp$class, sampvals)
install.packages("rpart")
library(rpart)
cart <- rpart(as.factor(classvalue)~., data=sampdata, method = 'class', minsplit = 5)
plot(cart, uniform=TRUE, main="Classification Tree")
text(cart, cex = 0.8)


pr2020 <- predict(vaia20, cart, type='class')
pr2020
pr2020 <- ratify(pr2020)
rat <- levels(pr2020)[[1]]
rat$legend <- c("Forest", "Grass", "Windthrow") 
levels(pr2020) <- rat
levelplot(pr2020, maxpixels = 1e6,
          col.regions = classcolor,
          att = "legend",
          scales=list(draw=FALSE),
          main = "Decision Tree classification of the post-Vaia area")
